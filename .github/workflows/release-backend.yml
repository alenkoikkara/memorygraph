name: backend image release 

on:
  push:
    branches: [ main ]
    paths:
      - 'ui/**'
      - '.github/workflows/frontend.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION="${GITHUB_REF#refs/tags/}"
        else
          VERSION="dev-${GITHUB_SHA::7}"
        fi
        echo "VERSION=$VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        file: ./server/Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ghcr.io/alenkoikkara/memento-backend:latest
          ghcr.io/alenkoikkara/memento-backend:${{ steps.get_version.outputs.version }}
          ghcr.io/alenkoikkara/memento-backend:${{ github.sha }}

    - name: Install cloudflared
      run: |
        curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
        chmod +x cloudflared
        sudo mv cloudflared /usr/local/bin/

    - name: Setup SSH Key and Config
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        cat <<EOF > ~/.ssh/config
        Host sshpi
          User charlie
          HostName sshpi.alenkoikkara.com
          IdentityFile ~/.ssh/id_rsa
          ProxyCommand cloudflared access tcp --hostname %h
          StrictHostKeyChecking no
        EOF

    - name: Restart backend on Pi
      run: |
        ssh sshpi <<'EOF'
          cd /home/charlie
          docker compose pull memento-backend
          docker compose up -d --no-deps --force-recreate memento-backend
        EOF
